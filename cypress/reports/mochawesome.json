{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2022-02-15T21:03:51.137Z",
    "end": "2022-02-15T21:05:10.364Z",
    "duration": 79227,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7d73b89a-893b-4725-a837-f95932c34ec6",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ed76b867-02dd-478b-8cf9-dbedd33ab3d4",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "b2aaa809-a74f-42da-af93-0551fda5e3ec",
              "parentUUID": "ed76b867-02dd-478b-8cf9-dbedd33ab3d4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b2aaa809-a74f-42da-af93-0551fda5e3ec"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 188,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "83a8709f-a487-4ff4-b69f-088fc9c321fb",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette` e ter mais de 0px de altura e de largura.",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "1a2036c2-37a7-4feb-9027-80ecd3bbe820",
              "parentUUID": "83a8709f-a487-4ff4-b69f-088fc9c321fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "2463aa84-96ba-457f-8da3-7846265c8e11",
              "parentUUID": "83a8709f-a487-4ff4-b69f-088fc9c321fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 199,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "1db7c9d5-2109-4c80-9a50-069f9ba938c3",
              "parentUUID": "83a8709f-a487-4ff4-b69f-088fc9c321fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "ed497565-a261-40ec-a8fc-e4058f611c14",
              "parentUUID": "83a8709f-a487-4ff4-b69f-088fc9c321fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 101,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "b11f1fca-3ce8-49e7-9948-db326dca2fde",
              "parentUUID": "83a8709f-a487-4ff4-b69f-088fc9c321fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 95,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "1331e0e7-03f3-4230-88b3-606fd13b425c",
              "parentUUID": "83a8709f-a487-4ff4-b69f-088fc9c321fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "29594f4d-ee4b-4691-b6e5-32592be9f88c",
              "parentUUID": "83a8709f-a487-4ff4-b69f-088fc9c321fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a2036c2-37a7-4feb-9027-80ecd3bbe820",
            "2463aa84-96ba-457f-8da3-7846265c8e11",
            "1db7c9d5-2109-4c80-9a50-069f9ba938c3",
            "ed497565-a261-40ec-a8fc-e4058f611c14",
            "b11f1fca-3ce8-49e7-9948-db326dca2fde",
            "1331e0e7-03f3-4230-88b3-606fd13b425c",
            "29594f4d-ee4b-4691-b6e5-32592be9f88c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 995,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e5d0beb6-3f2e-4255-ac47-7657244c2af0",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 94,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "14810d00-6b51-4bad-9db4-32bddb7ab769",
              "parentUUID": "e5d0beb6-3f2e-4255-ac47-7657244c2af0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "89485d1c-aab8-47c1-af7c-e5a73e5679cc",
              "parentUUID": "e5d0beb6-3f2e-4255-ac47-7657244c2af0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "14810d00-6b51-4bad-9db4-32bddb7ab769",
            "89485d1c-aab8-47c1-af7c-e5a73e5679cc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 306,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "012991e0-0a7a-415e-8db9-49a809e6437f",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 87,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "30b7cc3e-63fe-4224-b0bc-f59ce7d699cd",
              "parentUUID": "012991e0-0a7a-415e-8db9-49a809e6437f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 114,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "103ca9ce-a614-4b51-b6d7-f791661f571f",
              "parentUUID": "012991e0-0a7a-415e-8db9-49a809e6437f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "913e16a4-6d58-4c9a-8d7a-ee74ab511edc",
              "parentUUID": "012991e0-0a7a-415e-8db9-49a809e6437f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 91,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "1f848827-ab8e-4871-9e05-3d7259a1bc3d",
              "parentUUID": "012991e0-0a7a-415e-8db9-49a809e6437f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "30b7cc3e-63fe-4224-b0bc-f59ce7d699cd",
            "103ca9ce-a614-4b51-b6d7-f791661f571f",
            "913e16a4-6d58-4c9a-8d7a-ee74ab511edc",
            "1f848827-ab8e-4871-9e05-3d7259a1bc3d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 437,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8767a42f-4fa7-4551-969e-1146c7833c19",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "3da5b936-38b3-44df-a0e7-815db39ec38b",
              "parentUUID": "8767a42f-4fa7-4551-969e-1146c7833c19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 232,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "2fc6da0e-197f-4ffa-b37d-d5b36135d2e4",
              "parentUUID": "8767a42f-4fa7-4551-969e-1146c7833c19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3da5b936-38b3-44df-a0e7-815db39ec38b",
            "2fc6da0e-197f-4ffa-b37d-d5b36135d2e4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 491,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ca9f5b62-88c4-43c7-ba84-7f633f522de7",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 92,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "9bcccce6-e962-486a-b5b0-33ceabb3a6e3",
              "parentUUID": "ca9f5b62-88c4-43c7-ba84-7f633f522de7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 86,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "b21afe0e-cf80-4623-8b17-336035916907",
              "parentUUID": "ca9f5b62-88c4-43c7-ba84-7f633f522de7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9bcccce6-e962-486a-b5b0-33ceabb3a6e3",
            "b21afe0e-cf80-4623-8b17-336035916907"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 178,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ce079a93-2226-42a8-bdf9-07db7fc53bff",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 471,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "2553d07e-5374-44be-8354-6496de8dc779",
              "parentUUID": "ce079a93-2226-42a8-bdf9-07db7fc53bff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 8518,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "cc4e55bb-02c6-496a-9a24-4e3805092980",
              "parentUUID": "ce079a93-2226-42a8-bdf9-07db7fc53bff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2553d07e-5374-44be-8354-6496de8dc779",
            "cc4e55bb-02c6-496a-9a24-4e3805092980"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8989,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2682eca0-b509-4cec-9339-83cad607214b",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 2168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "254f9538-28bf-4b20-86d4-7161c197d6b8",
              "parentUUID": "2682eca0-b509-4cec-9339-83cad607214b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 8475,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "388ecb60-66b6-4aff-ad5a-0d592df8e8f2",
              "parentUUID": "2682eca0-b509-4cec-9339-83cad607214b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 1296,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "2aed977f-59eb-447c-9331-86d28cb63400",
              "parentUUID": "2682eca0-b509-4cec-9339-83cad607214b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "254f9538-28bf-4b20-86d4-7161c197d6b8",
            "388ecb60-66b6-4aff-ad5a-0d592df8e8f2",
            "2aed977f-59eb-447c-9331-86d28cb63400"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 11939,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "46c825ed-bbd3-436d-a4b2-3fafbac6a81f",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 163,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "8e35d6da-a472-45a2-b07d-158a4168f23a",
              "parentUUID": "46c825ed-bbd3-436d-a4b2-3fafbac6a81f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 98,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "e95247e8-bfbf-4ffb-a074-124f125c1491",
              "parentUUID": "46c825ed-bbd3-436d-a4b2-3fafbac6a81f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 81,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "070b4114-9608-4227-a26c-1836f7bd7833",
              "parentUUID": "46c825ed-bbd3-436d-a4b2-3fafbac6a81f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 2330,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "70ccddad-5e79-48de-b4e4-fc28979d683a",
              "parentUUID": "46c825ed-bbd3-436d-a4b2-3fafbac6a81f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e35d6da-a472-45a2-b07d-158a4168f23a",
            "e95247e8-bfbf-4ffb-a074-124f125c1491",
            "070b4114-9608-4227-a26c-1836f7bd7833",
            "70ccddad-5e79-48de-b4e4-fc28979d683a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2672,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a16ed35c-2a67-4213-8eb2-c9dddbc2bfa2",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 4306,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "877e3db3-2699-4be1-98b3-4cba8566f236",
              "parentUUID": "a16ed35c-2a67-4213-8eb2-c9dddbc2bfa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 4279,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "52800d18-4172-42fc-87f9-c968f097d6a8",
              "parentUUID": "a16ed35c-2a67-4213-8eb2-c9dddbc2bfa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 4287,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8dcaa580-a829-4ee6-bf95-2a50859141f0",
              "parentUUID": "a16ed35c-2a67-4213-8eb2-c9dddbc2bfa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 4285,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "da50ac98-70ec-4990-b182-9376c5bc5877",
              "parentUUID": "a16ed35c-2a67-4213-8eb2-c9dddbc2bfa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 4308,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4dc2a015-3074-4c8c-adb2-d9f89a2f64f0",
              "parentUUID": "a16ed35c-2a67-4213-8eb2-c9dddbc2bfa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 4267,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "c5c4e4d6-5d85-4454-a48b-6b1c7fe3d199",
              "parentUUID": "a16ed35c-2a67-4213-8eb2-c9dddbc2bfa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 4282,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "b3aef27f-e4a0-46d0-85c0-da99d5adb174",
              "parentUUID": "a16ed35c-2a67-4213-8eb2-c9dddbc2bfa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 4266,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "e015fdf8-c2ce-4429-93b0-d40ec664d06a",
              "parentUUID": "a16ed35c-2a67-4213-8eb2-c9dddbc2bfa2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 4289,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "f5a9041c-b321-44e1-aba2-2dc8890d7301",
              "parentUUID": "a16ed35c-2a67-4213-8eb2-c9dddbc2bfa2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "877e3db3-2699-4be1-98b3-4cba8566f236",
            "52800d18-4172-42fc-87f9-c968f097d6a8",
            "8dcaa580-a829-4ee6-bf95-2a50859141f0",
            "da50ac98-70ec-4990-b182-9376c5bc5877",
            "4dc2a015-3074-4c8c-adb2-d9f89a2f64f0",
            "c5c4e4d6-5d85-4454-a48b-6b1c7fe3d199",
            "b3aef27f-e4a0-46d0-85c0-da99d5adb174",
            "e015fdf8-c2ce-4429-93b0-d40ec664d06a",
            "f5a9041c-b321-44e1-aba2-2dc8890d7301"
          ],
          "pending": [],
          "skipped": [],
          "duration": 38569,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "94d54b9f-8270-414f-8616-990bd2727fd4",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 4266,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "4e863724-5c55-42f1-bcb9-12cd2dce1af5",
              "parentUUID": "94d54b9f-8270-414f-8616-990bd2727fd4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 4262,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "6903c3ec-d32a-412c-b4b5-9785572ab5d1",
              "parentUUID": "94d54b9f-8270-414f-8616-990bd2727fd4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 4273,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:45781/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:45781/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:45781/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:45781/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:45781/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:45781/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45781/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "82b48b4d-6ab6-4485-8df0-b8dbb2b6344f",
              "parentUUID": "94d54b9f-8270-414f-8616-990bd2727fd4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "4e863724-5c55-42f1-bcb9-12cd2dce1af5",
            "6903c3ec-d32a-412c-b4b5-9785572ab5d1",
            "82b48b4d-6ab6-4485-8df0-b8dbb2b6344f"
          ],
          "pending": [],
          "skipped": [],
          "duration": 12801,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "7527cb9b-a18a-485c-83aa-ed4eb19542b5",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 412,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45781/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45781/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45781/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45781/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45781/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45781/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45781/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45781/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "aeed3724-ab6b-4ba7-a0cc-6a4e4676db87",
              "parentUUID": "7527cb9b-a18a-485c-83aa-ed4eb19542b5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 298,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:45781/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:45781/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:45781/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:45781/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:45781/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:45781/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:45781/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:45781/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:45781/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:45781/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:45781/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:45781/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "34216bba-2c29-4d1c-b3cc-5f167212ec5e",
              "parentUUID": "7527cb9b-a18a-485c-83aa-ed4eb19542b5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "aeed3724-ab6b-4ba7-a0cc-6a4e4676db87",
            "34216bba-2c29-4d1c-b3cc-5f167212ec5e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 710,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}